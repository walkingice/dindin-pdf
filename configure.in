AC_PREREQ(2.59)
AC_INIT([dindin], [0.0.1], [walkingice0204@gmail.com])
AC_CONFIG_HEADERS(config.h)
AC_CONFIG_MACRO_DIR([m4])
AM_INIT_AUTOMAKE([1.8 foreign])

AC_CANONICAL_BUILD
AC_CANONICAL_HOST

AC_PROG_CC
AC_HEADER_STDC

IT_PROG_INTLTOOL([],[no-xml])
AC_PROG_INSTALL

AM_GNU_GETTEXT([external])
AM_GNU_GETTEXT_VERSION(0.14)

#
# Check Poppler Libs
#
PKG_CHECK_MODULES(poppler, poppler)
poppler_cflags=`pkg-config --cflags poppler poppler-glib`
poppler_libs=`pkg-config --libs poppler poppler-glib`
AC_SUBST(poppler_cflags)
AC_SUBST(poppler_libs)

#
# Check OpenGL and GLUT
#
#PKG_CHECK_MODULES(OPENGL, [libgl3])
#PKG_CHECK_MODULES(GLUT, [libglut3])

# Check Pango
PKG_CHECK_MODULES(pango, pango)
pango_cflags=`pkg-config --cflags pango`
pango_libs=`pkg-config --libs pango`
AC_SUBST(pango_cflags)
AC_SUBST(pango_libs)

# Check Cairo
PKG_CHECK_MODULES(cairo, cairo)
cairo_cflags=`pkg-config --cflags cairo`
cairo_libs=`pkg-config --libs cairo`
AC_SUBST(cairo_cflags)
AC_SUBST(cairo_libs)

# Check Gdk-pixbuf
PKG_CHECK_MODULES(gdkpixbuf, gdk-pixbuf-2.0)
gdkpixbuf_cflags=`pkg-config --cflags gdk-pixbuf-2.0`
gdkpixbuf_libs=`pkg-config --libs gdk-pixbuf-2.0`
AC_SUBST(gdkpixbuf_cflags)
AC_SUBST(gdkpixbuf_libs)

dnl ** configure switches **
AC_ARG_ENABLE([debug],
  AS_HELP_STRING([--enable-debug],
                 [enable Debug (default: no)]),
  debug=$enableval, debug="no")

dnl *** --- ***

dnl ** Debug option **
if test "$debug" = yes; then
  AC_DEFINE(CONFIG_DEBUG, 1,
            [Define to 1 if you want native library runtime debugging code enabled])
  CFLAGS="$CFLAGS -g"
fi

dnl *** --- ***

dnl CACHED_TRY_COMPILE(<description>,<cachevar>,<include>,<program>,<ifyes>,<ifno>)
AC_DEFUN([CACHED_TRY_COMPILE],[
  AC_MSG_CHECKING($1)
  AC_CACHE_VAL($2,[
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[$3]], [[$4]])],[$2=yes],[$2=no])
  ])
  if test "x$$2" = xyes; then
    true
    $5
  else
    true
    $6
  fi
])

dnl GCC_ATTRIBUTE(<short-label>,<cachevar>,<func-params>,<attribute>,<HAVE>,<desc>,[<true-cmds>],[<false-cmds>])
AC_DEFUN([GCC_ATTRIBUTE],[
  CACHED_TRY_COMPILE(__attribute__(($1)),cv_c_gcc_attribute_$2,,
   [extern int testfunction($3) __attribute__(($4))],
   AC_MSG_RESULT(yes)
   AC_DEFINE(HAVE_GNUC25_$5,,$6)
   $7,
   AC_MSG_RESULT(no)
   $8)
])

AC_DEFUN([GCC_ATTRIBUTE_SUPPORTED],[
 GCC_ATTRIBUTE([,,],supported,[int x],[,,],ATTRIB,[Define if function attributes a la GCC 2.5 and higher are available.])
 AH_BOTTOM([/* GNU C attributes. */
#ifndef FUNCATTR
#ifdef HAVE_GNUC25_ATTRIB
#define FUNCATTR(x) __attribute__(x)
#else
#define FUNCATTR(x)
#endif
#endif])
])

AC_DEFUN([GCC_ATTRIBUTE_UNUSED],[
 AC_REQUIRE([GCC_ATTRIBUTE_SUPPORTED])
 GCC_ATTRIBUTE(unused,unused,[int x],unused,UNUSED,[Define if unused variables la GCC 2.5 and higher are available.])
 AH_BOTTOM([/* GNU C unused functions, or null. */
#ifndef ATTRUNUSED
#ifdef HAVE_GNUC25_UNUSED
#define ATTRUNUSED unused
#else
#define ATTRUNUSED
#endif
#endif
#ifndef UNUSED
#define UNUSED FUNCATTR((ATTRUNUSED))
#endif])
])

dnl Only use -Wall and -pipe if we have gcc
if test "x$GCC" = "xyes"; then
	GCC_ATTRIBUTE_UNUSED
fi

AC_CONFIG_FILES([
	Makefile
	src/Makefile
	po/Makefile.in
])

AC_OUTPUT

echo
echo dindin pdf ...................... : Version $VERSION
echo Debug support ................... : $debug
